{"version":3,"file":"main.095efa6d69c4b0e2f14b.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,MAAM,MAAM,MAAM;AACjB,UAAQ,IAAI;AACZ,QAAM,CAAC,QAAQ,aAAa,6IAAQ,CAAC;AACrC,QAAM,CAAC,QAAQ,aAAa,6IAAQ,CAAC;AACrC,QAAM,kBAAkB,MAAM;AAC7B,cAAU,WAAS;AAClB,aAAO,QAAQ;AAAA;AAEhB,cAAU,CAAC;AAAA;AAEZ,SACC,8JAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAY,OAAO,EAAE,QAAQ;AAAA,KAC3C,8JAAC,WAAD;AAAA,IAAS,SAAS;AAAA,IAAiB,OAAM;AAAA,KACvC,QAAO,OAAI,SAEZ,SAAS,8JAAC,OAAD;AAAA,IAAK,KAAI;AAAA,KAAO,YAAe,8JAAC,OAAD;AAAA,IAAK,KAAI;AAAA,KAAQ,YACzD,SAAS,8JAAC,OAAD;AAAA,IAAK,KAAI;AAAA,KAAO,YAAe;AAAA;AAM5C,6IAAU,CAAC,8JAAC,KAAD,OAAS,SAAS,cAAc;;;;;;;;;UC5B3C","sources":["webpack://sun/./test-app/src/index.jsx","webpack://sun/webpack/runtime/getFullHash"],"sourcesContent":["import Sun, { useState } from '../../dist/sun'\r\nimport { ClickAddLi, ClickAddLongChild } from './component/click-add-li'\r\nimport { TraverseFiberTree } from './component/traverse-fiber-tree'\r\nimport { UsestateHookIndex, UsestateHookTest } from './component/usestate-test'\r\nimport { Outer, Child1 } from './component/props-test'\r\n\r\nconst App = () => {\r\n\tconsole.log(`Component: App`)\r\n\tconst [count1, setCount1] = useState(0)\r\n\tconst [status, setStatus] = useState(false)\r\n\tconst setCountAction1 = () => {\r\n\t\tsetCount1(state => {\r\n\t\t\treturn state + 1\r\n\t\t})\r\n\t\tsetStatus(!status)\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"row-index\" style={{ border: '1px solid red' }}>\r\n\t\t\t<article onClick={setCountAction1} style=\"border: 1px solid green\">\r\n\t\t\t\t{count1} - {status}\r\n\t\t\t</article>\r\n\t\t\t{status ? <div tag=\"true\">True 1</div> : <div tag=\"false\">False 1</div>}\r\n\t\t\t{status ? <div tag=\"true\">True 2</div> : null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// Sun.render(<TraverseFiberTree />, document.querySelector(`#app`))\r\nSun.render(<App />, document.querySelector(`#app2`))\r\n\r\n// function fffffff() {\r\n// \tconsole.log(`Task Start`)\r\n// \tsyncBlock(5)\r\n// \tconsole.log(`Task End`)\r\n// }\r\n// const taskQueue = []\r\n// const createTask = () => {\r\n// \tfor (let i = 0; i < 100; i++) {\r\n// \t\ttaskQueue.push(fffffff)\r\n// \t}\r\n// }\r\n\r\n// createTask()\r\n\r\n// const execTask = () => {\r\n// \tconst task = taskQueue.shift()\r\n// \ttask()\r\n// }\r\n\r\n// const workLoop = (deadline) => {\r\n// \tconsole.log(`执行 rIC, 检测当前帧的剩余时间: ${deadline.timeRemaining()}ms`)\r\n// \twhile (deadline.timeRemaining() > 0 && taskQueue.length > 0) {\r\n// \t\texecTask()\r\n// \t\tconsole.log(`当前帧的剩余时间: ${deadline.timeRemaining()}ms`)\r\n// \t}\r\n// \tif (taskQueue.length) {\r\n// \t\twindow.requestIdleCallback(workLoop)\r\n// \t}\r\n// }\r\n\r\n// window.requestIdleCallback(workLoop)\r\n","__webpack_require__.h = () => (\"4a6bcdcfc9ba5f3de6a7\")"],"names":[],"sourceRoot":""}